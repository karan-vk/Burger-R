{"version":3,"sources":["containers/CheckOut/CheckOut.js"],"names":["CheckoutSummary","React","lazy","ContactactData","CheckOut","CheckoutCanceledHandler","props","history","goBack","CheckoutContinuedHandler","replace","summary","to","this","ings","CheckoutCancel","CheckoutContinued","ingredient","path","match","component","purchasedRedirect","purchased","fallback","Component","connect","state","burgerBuilder","order"],"mappings":"oMAMMA,EAAkBC,IAAMC,MAAK,kBACjC,gCAEIC,EAAiBF,IAAMC,MAAK,kBAChC,iCAGIE,E,4MACJC,wBAA0B,WACxB,EAAKC,MAAMC,QAAQC,U,EAErBC,yBAA2B,WACzB,EAAKH,MAAMC,QAAQG,QAAQ,2B,uDAG3B,IAAIC,EAAU,kBAAC,IAAD,CAAUC,GAAG,MACvBC,KAAKP,MAAMQ,OACbH,EACE,6BACE,kBAACX,EAAD,CACEe,eAAgBF,KAAKR,wBACrBW,kBAAmBH,KAAKJ,yBACxBQ,WAAYJ,KAAKP,MAAMQ,OAEzB,kBAAC,IAAD,CACEI,KAAML,KAAKP,MAAMa,MAAMD,KAAO,gBAC9BE,UAAWjB,MAKnB,IAAIkB,EAAoBR,KAAKP,MAAMgB,UAAY,kBAAC,IAAD,CAAUV,GAAG,MAAS,KACrE,OACE,oCACGS,EACD,kBAAC,WAAD,CAAUE,SAAU,kBAAC,IAAD,OAAcZ,Q,GA5BnBa,aAyCRC,uBAPS,SAACC,GACvB,MAAO,CACLZ,KAAMY,EAAMC,cAAcV,WAC1BK,UAAWI,EAAME,MAAMN,aAIZG,CAAyBrB","file":"static/js/7.0bd2e38f.chunk.js","sourcesContent":["import React, { Component, Suspense } from \"react\";\r\n// import CheckoutSummary from \"../../components/Order/CheckoutSummary/CheckoutSummary\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\r\nimport { connect } from \"react-redux\";\r\n// import ContactactData from \"../../containers/CheckOut/Contact data/ContactactData\";\r\nconst CheckoutSummary = React.lazy(() =>\r\n  import(\"../../components/Order/CheckoutSummary/CheckoutSummary\")\r\n);\r\nconst ContactactData = React.lazy(() =>\r\n  import(\"./Contact data/ContactactData\")\r\n);\r\n\r\nclass CheckOut extends Component {\r\n  CheckoutCanceledHandler = () => {\r\n    this.props.history.goBack();\r\n  };\r\n  CheckoutContinuedHandler = () => {\r\n    this.props.history.replace(\"/checkout/contact-data\");\r\n  };\r\n  render() {\r\n    let summary = <Redirect to=\"/\" />;\r\n    if (this.props.ings) {\r\n      summary = (\r\n        <div>\r\n          <CheckoutSummary\r\n            CheckoutCancel={this.CheckoutCanceledHandler}\r\n            CheckoutContinued={this.CheckoutContinuedHandler}\r\n            ingredient={this.props.ings}\r\n          />\r\n          <Route\r\n            path={this.props.match.path + \"/contact-data\"}\r\n            component={ContactactData}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n    let purchasedRedirect = this.props.purchased ? <Redirect to=\"/\" /> : null;\r\n    return (\r\n      <>\r\n        {purchasedRedirect}\r\n        <Suspense fallback={<Spinner />}>{summary}</Suspense>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    ings: state.burgerBuilder.ingredient,\r\n    purchased: state.order.purchased,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(CheckOut);\r\n"],"sourceRoot":""}